javax.validation.constraints.Max.message         = nie mo\u017Ce by\u0107 wi\u0119ksze ni\u017C {value}
javax.validation.constraints.Min.message         = nie mo\u017Ce by\u0107 mniejsze ni\u017C {value}
javax.validation.constraints.NotNull.message     = nie mo\u017Ce by\u0107 null
javax.validation.constraints.Null.message        = musi by\u0107 null
javax.validation.constraints.Pattern.message     = musi pasowa\u0107 do wzorca "{regexp}"
javax.validation.constraints.Size.message        = d\u0142ugo\u015B\u0107 musi by\u0107 od {min} do {max} znak\u00F3w

javax.validation.constraints.Past.message        = nie mo\u017Ce by\u0107 w przysz\u0142o\u015Bci
javax.validation.constraints.Future.message      = nie mo\u017Ce by\u0107 w przesz\u0142o\u015Bci
org.hibernate.validator.constraints.NotEmpty.message                = pole nie mo\u017Ce by\u0107 puste.
org.hibernate.validator.constraints.NotBlank.message                = pole nie mo\u017Ce by\u0107 puste.
org.hibernate.validator.constraints.SafeHtml.message                = pole zawiera niebezpieczne tagi html.
org.hibernate.validator.constraints.URL.message                     = musi by\u0107 poprawnym adresem url
org.hibernate.validator.constraints.Range.message                   = mo\u017Ce by\u0107 w zakresie od {min} do {max}
org.hibernate.validator.constraints.Email.message                   = nieprawid\u0142owy format adresu email.

javax.validation.constraints.AssertFalse.message = must be false
javax.validation.constraints.AssertTrue.message  = must be true
javax.validation.constraints.DecimalMax.message  = must be less than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.DecimalMin.message  = must be greater than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.Digits.message      = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)

org.hibernate.validator.constraints.CreditCardNumber.message        = invalid credit card number
org.hibernate.validator.constraints.EAN.message                   = invalid {type} barcode
org.hibernate.validator.constraints.Length.message                  = length must be between {min} and {max}
org.hibernate.validator.constraints.LuhnCheck.message               = The check digit for ${validatedValue} is invalid, Luhn Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod10Check.message              = The check digit for ${validatedValue} is invalid, Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod11Check.message              = The check digit for ${validatedValue} is invalid, Modulo 11 checksum failed
org.hibernate.validator.constraints.ModCheck.message                = The check digit for ${validatedValue} is invalid, ${modType} checksum failed
org.hibernate.validator.constraints.ParametersScriptAssert.message  = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.ScriptAssert.message            = script expression "{script}" didn't evaluate to true